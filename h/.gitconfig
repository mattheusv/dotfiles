[user]
	name = Matheus Alcantara
	email = mths.dev@pm.me

[includeIf "gitdir:~/dev/work/**"]
    path = ~/dev/work/.gitconfig

[push]
	default = current
	autoSetupRemote = true

[pull]
	default = current
	rebase = true

[alias]
	st = number -s
	sst = status
	aa = add .
	au = add -u
    amend = !git add -u && git commit --amend
    a = number add
    f = fetch
    rs = number restore --staged
	cm = commit
	cmm = commit -m
	cma = commit -am
    si = switch
	ck = number checkout
	cka = checkout .
	cko = checkout origin
    df = number diff
	ps = push
	pso = push origin
	pl = pull
	plo = pull origin
	r = remote -v
	b = branch
	l = log --pretty=oneline -n 20
    sh = stash
    cp = cherry-pick
    search = !fish -c git-search
    last = for-each-ref --sort=-committerdate --count=20 --format='%(align:30,left)%(refname:short)%(end)%(committerdate:relative)' refs/heads/
    release-notes = !git log --oneline --left-right --cherry-pick $(git describe --tags --abbrev=0)..$(git rev-parse --abbrev-ref HEAD)
    # Show the commits from main branch that does not exists on current branch ignoring commits that was cherry-picked from main to current branch.
    diff-commits = !git log --oneline --left-only --cherry-pick main...$(git rev-parse --abbrev-ref HEAD)


[core]
    editor = 'nvim'
    pager = 'delta'

[interactive]
    diffFilter = delta --color-only

[delta]
    features = line-numbers decorations

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none

[init]
	defaultBranch = main
