#!/bin/bash -e

ASDF_PATH=~/.asdf
ASDF_BIN=$ASDF_PATH/bin/asdf


exists() {
  command -v "$1" >/dev/null 2>&1
}

configure_asdf() {
    if [ ! -d $ASDF_PATH  ]; then
        git clone https://github.com/asdf-vm/asdf.git $ASDF_PATH --branch v1.8.1 -q
    fi
}

configure_nodejs() {
    if ! exists node; then
        echo "Installing Nodejs"
        $ASDF_BIN plugin-add nodejs
        $ASDF_BIN install nodejs lts
        $ASDF_BIN global nodejs lts
    fi
}

configure_go() {
    if ! exists go; then
        echo "Installing Go"
        wget -q https://golang.org/dl/go1.17.1.linux-amd64.tar.gz
        sudo tar -C /usr/local -xzf go1.17.1.linux-amd64.tar.gz
    fi
}

configure_rust() {
    if ! exists cargo; then
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    fi
}

configure_languages() {
    configure_asdf
    configure_nodejs
    configure_go
    configure_rust
}

configure_editor() {
    VIM_PLUG=$HOME/.local/share/nvim/site/autoload/plug.vim
    NVIM_CONFIG=$HOME/.config/nvim
    NVIM_CONFIG_LUA=$HOME/.config/nvim/lua
    INIT_VIM=$NVIM_CONFIG/init.vim
    INIT_LUA=$NVIM_CONFIG_LUA/init.lua
    LSP_LUA=$NVIM_CONFIG_LUA/lsp.lua
    EDITOR_LUA=$NVIM_CONFIG_LUA/editor.lua


    if [ ! -d "$NVIM_CONFIG" ]; then
        mkdir -p $NVIM_CONFIG
    fi

    if [ ! -f $VIM_PLUG ]; then
        echo "Installing vim plug"
        curl -q -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    fi

    if [ ! -d $NVIM_CONFIG_LUA ]; then
        mkdir -p $NVIM_CONFIG_LUA
    fi

    if [ ! -f $INIT_VIM ];then 
        ln -s $DOTFILES/nvim/init.vim $INIT_VIM
    fi

    if [ ! -f $INIT_LUA ];then 
        ln -s $DOTFILES/nvim/lua/init.lua $INIT_LUA
    fi

    if [ ! -f $LSP_LUA ];then 
        ln -s $DOTFILES/nvim/lua/lsp.lua $LSP_LUA
    fi

    if [ ! -f $EDITOR_LUA ];then 
        ln -s $DOTFILES/nvim/lua/editor.lua $EDITOR_LUA
    fi

    if ! exists nvim; then
        echo "WARNING: neovim not installed"
    fi

    # Install neovim lsp
    if exists nvim; then
        echo "Installing Neovim tools"

        # Install python lsp
        pip install --user jedi-language-server
        python3 -m venv ~/.config/nvim/venv
        ~/.config/nvim/venv/bin/pip install -U pip
        ~/.config/nvim/venv/bin/pip install pynvim

        # Install lsp servers
        npm i -g bash-language-server dockerfile-language-server-nodejs vim-language-server \
            yaml-language-server typescript-language-server

        nvim +PlugInstall +qall
    fi
}

install_tools() {
    if [ "$1" == "arch" ]; then
        echo "Installing Arch Linux development tools..."
        sudo pacman -S - < ./scripts/dev-packages.archlinux
    elif [ "$1" == "deb" ]; then
        echo "Installing Debian development tools..."
        sudo apt install $(cat ./scripts/dev-packages.debian)
    else
        echo "A distro base is required. Options are: arch, deb."
        exit 1
    fi
}

configure_dev() {
    install_tools $@
    configure_languages
    configure_editor
}

configure_dev $@
